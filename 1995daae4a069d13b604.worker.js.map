{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","logic.js","sim.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_defineProperty","obj","configurable","writable","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelper","iterator","isArray","minLen","toString","slice","constructor","from","test","F","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","nextOutputFunctions","and","gate","state","getInputs","every","x","or","some","xor","constant","led","buffer","switch","Boolean","getUserInput","pin","id","nextId","connections","nextState","circuit","prevState","outputs","inputs","gates","nextOutputs","type","isInverted","assign","map","currentId","Number","MAX_SAFE_INTEGER","getValidPins","fromEntries","reduce","concat","getOutputs","setUserInput","fastForward","renumber","clone","maxId","calcNewId","updateId","connect","a","b","andGate","seal","orGate","xorGate","constantGate","switchGate","removeInvalidConnections","validPins","gateClone","updatePin","callback","handle","startSimulation","initialState","Error","logic","setInterval","getState","stopSimulation","clearInterval"],"mappings":"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","file":"1995daae4a069d13b604.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/mml2/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/*\n * An object mapping gate types to functions.\n */\nconst nextOutputFunctions = {\n  and: (gate, state) => [getInputs(gate, state).every((x) => x)],\n  or: (gate, state) => [getInputs(gate, state).some((x) => x)],\n  xor: (gate, state) => [\n    getInputs(gate, state).filter((x) => x).length % 2 !== 0\n  ],\n  constant: (gate, state) => [gate.value],\n  led: (gate, state) => [],\n  buffer: (gate, state) => getInputs(gate, state),\n  switch: (gate, state) => [Boolean(getUserInput(gate, state))]\n}\n\n/** Connect to logic pins by a wire. */\nfunction connect (a, b) {\n  a.connections.push(b.id)\n  b.connections.push(a.id)\n}\n\n/**\n * Creates a circuit with the given gates.\n */\nfunction circuit (gates) {\n  return {\n    gates\n  }\n}\n\n/**\n * Creates a logic pin. A pin may be inverted by setting its isInverted field.\n */\nfunction pin () {\n  return {\n    id: nextId(),\n    connections: []\n  }\n}\n\n/** Creates an and gate. */\nfunction andGate () {\n  return {\n    id: nextId(),\n    type: 'and',\n    inputs: [pin(), pin()],\n    outputs: Object.seal([pin()])\n  }\n}\n\n/** Creates an or gate. */\nfunction orGate () {\n  return {\n    id: nextId(),\n    type: 'or',\n    inputs: [pin(), pin()],\n    outputs: Object.seal([pin()])\n  }\n}\n\n/** Creates an xor gate. */\nfunction xorGate () {\n  return {\n    id: nextId(),\n    type: 'xor',\n    inputs: [pin(), pin()],\n    outputs: Object.seal([pin()])\n  }\n}\n\n/** Creates a constant gate (for simulating ground or 1). */\nfunction constantGate (value) {\n  return {\n    id: nextId(),\n    type: 'constant',\n    inputs: Object.seal([]),\n    outputs: Object.seal([pin()]),\n    value: value || false\n  }\n}\n\n/** Creates a switch gate that the user can interact with. */\nfunction switchGate () {\n  return {\n    id: nextId(),\n    type: 'switch',\n    inputs: Object.seal([]),\n    outputs: Object.seal([pin()])\n  }\n}\n\n/** Creates an LED. */\nfunction led () {\n  return {\n    id: nextId(),\n    type: 'led',\n    inputs: Object.seal([pin()]),\n    outputs: Object.seal([])\n  }\n}\n\n/** Creates a buffer (a gate that simply passes its input to its output). */\nfunction buffer () {\n  return {\n    id: nextId(),\n    type: 'buffer',\n    inputs: Object.seal([pin()]),\n    outputs: Object.seal([pin()])\n  }\n}\n\n/**\n * Computes a state object to represent the current state of the simulation for\n * the given circuit. If prevState is passed, returns the next state after the\n * given state.\n *\n * The state object is an object containing an outputs field, which is an object\n * that maps each pin ID to a boolean value. For example, if a pin with ID 2 has\n * an output of true, the state object would look something like this:\n * { outputs: { 2: true } }\n *\n * To calculate the inputs and outputs of individual gates, the getInputs and\n * getOutputs helper functions can be used.\n *\n * The input from the user (for example, whether a switch is switched or not) is\n * stored in the inputs field, that maps a gate ID to a user input object. The\n * format of the input depends on the gate itself.\n */\nfunction nextState (circuit, prevState) {\n  const state = { outputs: {}, inputs: {} }\n\n  if (prevState) {\n    for (const gate of circuit.gates) {\n      /* Calculate the next output. */\n      const nextOutputs = nextOutputFunctions[gate.type](gate, prevState)\n\n      for (let i = 0; i < nextOutputs.length; i++) {\n        state.outputs[gate.outputs[i].id] = (\n          nextOutputs[i] ^ gate.outputs[i].isInverted) === 1\n      }\n    }\n\n    Object.assign(state.inputs, prevState.inputs)\n  } else {\n    /* Initialize all outputs to false. */\n    for (const gate of circuit.gates) {\n      for (const pin of gate.outputs) {\n        state.outputs[pin.id] = false\n      }\n    }\n  }\n\n  return state\n}\n\n/**\n * Returns a list of input booleans for the gate given the current simulation\n * state.\n */\nfunction getInputs (gate, state) {\n  return gate.inputs\n    .map((pin) => (state.outputs[pin.connections[0]] ^ pin.isInverted) === 1)\n}\n\n/**\n * Returns a list of output booleans for the gate given the current simulation\n * state.\n */\nfunction getOutputs (gate, state) {\n  return gate.outputs.map((pin) => state.outputs[pin.id])\n}\n\n/**\n * Returns the user input for the gate given the current simulation state.\n */\nfunction getUserInput (gate, state) {\n  return state.inputs[gate.id]\n}\n\n/**\n * Sets the user input for the gate for the current simulation state.\n */\nfunction setUserInput (gate, state, value) {\n  state.inputs[gate.id] = value\n}\n\n/**\n * Skip forward n simulation states given a circuit, n, and the (optional)\n * current state. This function simply calls nextState(circuit, state) n times.\n */\nfunction fastForward (circuit, n, state) {\n  for (let i = 0; i < n; i++) {\n    state = nextState(circuit, state)\n  }\n  return state\n}\n\n/*\n * Function to return a unique id. This should only be used within this JS file.\n * The ID wraps around to 0 once Number.MAX_SAFE_INTEGER is reached. This is\n * assumed to be okay since Number.MAX_SAFE_INTEGER is so large.\n */\nlet currentId = 0\nfunction nextId () {\n  if (currentId >= Number.MAX_SAFE_INTEGER) {\n    currentId = 0\n  }\n\n  return currentId++\n}\n\n/*\n * This function renumbers the IDs of the given circuit so that there are no\n * collisions. This should be called any time a circuit is loaded to avoid\n * collisions. It returns the circuit.\n */\nfunction renumber (circuit) {\n  const clone = { ...circuit }\n  let maxId = currentId\n\n  const calcNewId = (id) => currentId < (Number.MAX_SAFE_INTEGER - id)\n    ? id + currentId\n    : (id - Number.MAX_SAFE_INTEGER) + currentId\n\n  const updateId = (object) => {\n    const clone = {\n      ...object,\n      id: calcNewId(object.id)\n    }\n    if (clone.id > maxId) {\n      maxId = clone.id\n    }\n\n    if (clone.connections) {\n      clone.connections = clone.connections.map(calcNewId)\n    }\n    return clone\n  }\n\n  clone.gates = clone.gates.map((gate) => {\n    const r = updateId(gate)\n    r.inputs = r.inputs.map(updateId)\n    r.outputs = r.outputs.map(updateId)\n    return r\n  })\n\n  currentId = maxId + 1\n\n  return clone\n}\n\n/**\n * Create an object containing the IDs of all valid pins for the given gates.\n */\nconst getValidPins = (gates) => (\n  Object.fromEntries(gates.reduce(\n    (t, gate) => t.concat(\n      gate.inputs.map((pin) => pin.id),\n      gate.outputs.map((pin) => pin.id)),\n    []\n  ).map((id) => [id, true]))\n)\n\n/**\n * Returns a new list of gates from the given list of gates with the\n * connections to invalid pins removed.\n */\nconst removeInvalidConnections = (gates) => {\n  const validPins = getValidPins(gates)\n\n  /* Remove all connections that point to a deleted pin. */\n  return gates.map((gate) => {\n    const gateClone = { ...gate }\n    const updatePin = (pin) => {\n      return {\n        ...pin,\n        connections: pin.connections.filter((id) => validPins[id])\n      }\n    }\n\n    gateClone.inputs = gateClone.inputs.map(updatePin)\n    gateClone.outputs = gateClone.outputs.map(updatePin)\n    return gateClone\n  })\n}\n\nexport default {\n  /* Simulation. */\n  nextState,\n  getOutputs,\n  getInputs,\n  getUserInput,\n  setUserInput,\n  fastForward,\n\n  /* Circuit creation. */\n  renumber,\n  connect,\n  circuit,\n  andGate,\n  orGate,\n  xorGate,\n  constantGate,\n  switchGate,\n  led,\n  buffer,\n\n  /* Utils. */\n  removeInvalidConnections,\n  getValidPins\n}\n","import logic from './logic'\n\nlet state = null\nlet callback = null\nlet handle = null\n\nexport function startSimulation (circuit, initialState) {\n  if (!state && !callback && !handle) {\n    state = initialState || logic.nextState(circuit)\n    callback = () => {\n      state = logic.nextState(circuit, state)\n    }\n    handle = setInterval(callback, 1)\n  } else {\n    throw new Error('simulation already started')\n  }\n}\n\nexport function getState () {\n  return state\n}\n\nexport function stopSimulation () {\n  clearInterval(handle)\n  state = null\n  callback = null\n  handle = null\n}\n\nexport function setUserInput (gate, value) {\n  logic.setUserInput(gate, state, value)\n}\n"],"sourceRoot":""}